// <auto-generated />

using System;
using DemoB.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace DemoB.Migrations
{
    [DbContext(typeof(EavContext))]
    partial class EavContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("DemoB.Models.Eav.Attribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityId");

                    b.Property<Guid>("EntityTypeAttributeId");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("EntityTypeAttributeId");

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityTypeId");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("Entities");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("EntityTypes");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.EntityTypeAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityTypeId");

                    b.Property<bool>("IsNullable");

                    b.Property<bool>("IsUnique");

                    b.Property<string>("Name");

                    b.Property<int>("ValueTypeId");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("ValueTypeId");

                    b.ToTable("EntityTypeAttributes");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.EntityTypeRelationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityTypeId");

                    b.Property<bool>("IsHasManyRelationship");

                    b.Property<string>("Name");

                    b.Property<Guid>("RelatedEntityTypeId");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("RelatedEntityTypeId");

                    b.ToTable("EntityTypeRelationships");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.ValueType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ValueTypes");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Relationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("EntityId");

                    b.Property<Guid>("EntityTypeRelationshipId");

                    b.Property<Guid>("RelatedEntityId");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.HasIndex("EntityTypeRelationshipId");

                    b.HasIndex("RelatedEntityId");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeBooleanValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<bool>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .IsUnique();

                    b.ToTable("AttributeBooleanValues");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeDateTimeValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<DateTime>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .IsUnique();

                    b.ToTable("AttributeDateTimeValues");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeDecimalValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .IsUnique();

                    b.ToTable("AttributeDecimalValues");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeIntegerValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<int>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .IsUnique();

                    b.ToTable("AttributeIntegerValues");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeTextValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttributeId");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId")
                        .IsUnique();

                    b.ToTable("AttributeTextValues");
                });

            modelBuilder.Entity("DemoB.Models.Eav.Attribute", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Entity", "Entity")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoB.Models.Eav.Meta.EntityTypeAttribute", "EntityTypeAttribute")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityTypeAttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Entity", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Meta.EntityType", "EntityType")
                        .WithMany("Entities")
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.EntityTypeAttribute", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Meta.EntityType", "EntityType")
                        .WithMany("EntityTypeAttributes")
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoB.Models.Eav.Meta.ValueType", "ValueType")
                        .WithMany("Attributes")
                        .HasForeignKey("ValueTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Meta.EntityTypeRelationship", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Meta.EntityType", "EntityType")
                        .WithMany("EntityTypeRelationships")
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoB.Models.Eav.Meta.EntityType", "RelatedEntityType")
                        .WithMany("ReverseEntityTypeRelationships")
                        .HasForeignKey("RelatedEntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Relationship", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Entity", "Entity")
                        .WithMany("Relationships")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoB.Models.Eav.Meta.EntityTypeRelationship", "EntityTypeRelationship")
                        .WithMany("Relationships")
                        .HasForeignKey("EntityTypeRelationshipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoB.Models.Eav.Entity", "RelatedEntity")
                        .WithMany("ReverseRelationships")
                        .HasForeignKey("RelatedEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeBooleanValue", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Attribute", "Attribute")
                        .WithOne("BooleanValue")
                        .HasForeignKey("DemoB.Models.Eav.Values.AttributeBooleanValue", "AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeDateTimeValue", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Attribute", "Attribute")
                        .WithOne("DateTimeValue")
                        .HasForeignKey("DemoB.Models.Eav.Values.AttributeDateTimeValue", "AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeDecimalValue", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Attribute", "Attribute")
                        .WithOne("DecimalValue")
                        .HasForeignKey("DemoB.Models.Eav.Values.AttributeDecimalValue", "AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeIntegerValue", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Attribute", "Attribute")
                        .WithOne("IntegerValue")
                        .HasForeignKey("DemoB.Models.Eav.Values.AttributeIntegerValue", "AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoB.Models.Eav.Values.AttributeTextValue", b =>
                {
                    b.HasOne("DemoB.Models.Eav.Attribute", "Attribute")
                        .WithOne("TextValue")
                        .HasForeignKey("DemoB.Models.Eav.Values.AttributeTextValue", "AttributeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
